From 8e2b0e49409fb12046852f6a7a73f68ce3f67415 Mon Sep 17 00:00:00 2001
From: Xan Lopez <xan@webkit.org>
Date: Sat, 4 Dec 2010 14:37:45 +0000
Subject: [PATCH] WebCore:

2010-12-04  Xan Lopez  <xlopez@igalia.com>

        Reviewed by Martin Robinson.

        [GTK] Drop GdkDrawable usage, it's deprecated in GTK+3.x and we can use GdkWindow
        https://bugs.webkit.org/show_bug.cgi?id=50451

        GdkDrawable has been removed in GTK+3.x. To cope with this we can
        actually stop using it altogether, since GdkWindow is just a
        typedef for it and that seems to be good enough for us.

        * platform/graphics/GraphicsContext.h: s/GdkDrawable/GdkWindow/.
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::GraphicsContext::gdkWindow): ditto.
        * platform/gtk/GtkVersioning.h: declare GDK_WINDOW_XWINDOW for GTK 3.x builds.
        * platform/gtk/PlatformScreenGtk.cpp:
        (WebCore::screenAvailableRect): s/GdkDrawable/GdkWindow/.
        * platform/gtk/WidgetGtk.cpp:
        (WebCore::gdkWindow): ditto.
        (WebCore::Widget::setCursor): ditto.
        * platform/gtk/WidgetRenderingContextGtk2.cpp: ditto.

JavaScriptCore:

2010-12-04  Xan Lopez  <xlopez@igalia.com>

        Reviewed by Martin Robinson.

        [GTK] Drop GdkDrawable usage, it's deprecated in GTK+3.x and we can use GdkWindow
        https://bugs.webkit.org/show_bug.cgi?id=50451

        * wtf/gobject/GTypedefs.h: add GdkWindow defines.

git-svn-id: http://svn.webkit.org/repository/webkit/trunk@73330 268f45cc-cd09-0410-ab3c-d52691b4dbfc
---
 JavaScriptCore/ChangeLog                           |    9 ++++++++
 JavaScriptCore/wtf/gobject/GTypedefs.h             |    3 +-
 WebCore/ChangeLog                                  |   22 ++++++++++++++++++++
 WebCore/platform/Widget.h                          |    1 -
 WebCore/platform/graphics/GraphicsContext.h        |    7 +-----
 .../graphics/cairo/GraphicsContextCairo.cpp        |    4 +-
 WebCore/platform/gtk/GtkVersioning.h               |    1 +
 WebCore/platform/gtk/PlatformScreenGtk.cpp         |    2 +-
 WebCore/platform/gtk/WidgetGtk.cpp                 |    4 +-
 .../platform/gtk/WidgetRenderingContextGtk2.cpp    |    6 ++--
 10 files changed, 43 insertions(+), 16 deletions(-)

diff --git a/JavaScriptCore/ChangeLog b/JavaScriptCore/ChangeLog
index ee2aa99..cacc38d 100644
--- a/JavaScriptCore/ChangeLog
+++ b/JavaScriptCore/ChangeLog
@@ -1,3 +1,12 @@
+2010-12-04  Xan Lopez  <xlopez@igalia.com>
+
+        Reviewed by Martin Robinson.
+
+        [GTK] Drop GdkDrawable usage, it's deprecated in GTK+3.x and we can use GdkWindow
+        https://bugs.webkit.org/show_bug.cgi?id=50451
+
+        * wtf/gobject/GTypedefs.h: add GdkWindow defines.
+
 2010-12-03  Gavin Barraclough  <barraclough@apple.com>
 
         Rubber stamped by Oliver Hunt.
diff --git a/JavaScriptCore/wtf/gobject/GTypedefs.h b/JavaScriptCore/wtf/gobject/GTypedefs.h
index 76d1b1a..0b9a9ea 100644
--- a/JavaScriptCore/wtf/gobject/GTypedefs.h
+++ b/JavaScriptCore/wtf/gobject/GTypedefs.h
@@ -44,7 +44,6 @@ typedef struct _GDir GDir;
 typedef struct _GdkAtom* GdkAtom;
 typedef struct _GdkCursor GdkCursor;
 typedef struct _GdkDragContext GdkDragContext;
-typedef struct _GdkDrawable GdkDrawable;
 typedef struct _GdkEventConfigure GdkEventConfigure;
 typedef struct _GdkEventExpose GdkEventExpose;
 typedef struct _GdkPixbuf GdkPixbuf;
@@ -85,7 +84,9 @@ typedef struct _GtkWindow GtkWindow;
 
 #ifdef GTK_API_VERSION_2
 typedef struct _GdkRectangle GdkRectangle;
+typedef struct _GdkDrawable GdkWindow;
 #else
+typedef struct _GdkWindow GdkWindow;
 typedef struct _cairo_rectangle_int cairo_rectangle_int_t;
 typedef cairo_rectangle_int_t GdkRectangle;
 #endif
diff --git a/WebCore/ChangeLog b/WebCore/ChangeLog
index 00923a5..3ea83cd 100644
--- a/WebCore/ChangeLog
+++ b/WebCore/ChangeLog
@@ -1,3 +1,25 @@
+2010-12-04  Xan Lopez  <xlopez@igalia.com>
+
+        Reviewed by Martin Robinson.
+
+        [GTK] Drop GdkDrawable usage, it's deprecated in GTK+3.x and we can use GdkWindow
+        https://bugs.webkit.org/show_bug.cgi?id=50451
+
+        GdkDrawable has been removed in GTK+3.x. To cope with this we can
+        actually stop using it altogether, since GdkWindow is just a
+        typedef for it and that seems to be good enough for us.
+
+        * platform/graphics/GraphicsContext.h: s/GdkDrawable/GdkWindow/.
+        * platform/graphics/cairo/GraphicsContextCairo.cpp:
+        (WebCore::GraphicsContext::gdkWindow): ditto.
+        * platform/gtk/GtkVersioning.h: declare GDK_WINDOW_XWINDOW for GTK 3.x builds.
+        * platform/gtk/PlatformScreenGtk.cpp:
+        (WebCore::screenAvailableRect): s/GdkDrawable/GdkWindow/.
+        * platform/gtk/WidgetGtk.cpp:
+        (WebCore::gdkWindow): ditto.
+        (WebCore::Widget::setCursor): ditto.
+        * platform/gtk/WidgetRenderingContextGtk2.cpp: ditto.
+
 2010-12-03  Dimitri Glazkov  <dglazkov@chromium.org>
 
         Reviewed by Darin Adler.
diff --git a/WebCore/platform/Widget.h b/WebCore/platform/Widget.h
index 7635149..10c65ce 100644
--- a/WebCore/platform/Widget.h
+++ b/WebCore/platform/Widget.h
@@ -60,7 +60,6 @@ typedef HWND PlatformWidget;
 #endif
 
 #if PLATFORM(GTK)
-typedef struct _GdkDrawable GdkDrawable;
 typedef struct _GtkWidget GtkWidget;
 typedef struct _GtkContainer GtkContainer;
 typedef GtkWidget* PlatformWidget;
diff --git a/WebCore/platform/graphics/GraphicsContext.h b/WebCore/platform/graphics/GraphicsContext.h
index 57b43b8..69d9e16 100644
--- a/WebCore/platform/graphics/GraphicsContext.h
+++ b/WebCore/platform/graphics/GraphicsContext.h
@@ -89,11 +89,6 @@ typedef struct HDC__ PlatformGraphicsContext;
 typedef void PlatformGraphicsContext;
 #endif
 
-#if PLATFORM(GTK)
-typedef struct _GdkDrawable GdkDrawable;
-typedef struct _GdkEventExpose GdkEventExpose;
-#endif
-
 #if PLATFORM(WIN)
 typedef struct HDC__* HDC;
 #if !PLATFORM(CG)
@@ -407,7 +402,7 @@ namespace WebCore {
 
 #if PLATFORM(GTK)
         void setGdkExposeEvent(GdkEventExpose*);
-        GdkDrawable* gdkDrawable() const;
+        GdkWindow* gdkWindow() const;
         GdkEventExpose* gdkExposeEvent() const;
 #endif
 
diff --git a/WebCore/platform/graphics/cairo/GraphicsContextCairo.cpp b/WebCore/platform/graphics/cairo/GraphicsContextCairo.cpp
index 9c2ff82..a718f27 100644
--- a/WebCore/platform/graphics/cairo/GraphicsContextCairo.cpp
+++ b/WebCore/platform/graphics/cairo/GraphicsContextCairo.cpp
@@ -1085,12 +1085,12 @@ GdkEventExpose* GraphicsContext::gdkExposeEvent() const
     return m_data->expose;
 }
 
-GdkDrawable* GraphicsContext::gdkDrawable() const
+GdkWindow* GraphicsContext::gdkWindow() const
 {
     if (!m_data->expose)
         return 0;
 
-    return GDK_DRAWABLE(m_data->expose->window);
+    return m_data->expose->window;
 }
 #endif
 
diff --git a/WebCore/platform/gtk/GtkVersioning.h b/WebCore/platform/gtk/GtkVersioning.h
index ea15a54..9c38aba 100644
--- a/WebCore/platform/gtk/GtkVersioning.h
+++ b/WebCore/platform/gtk/GtkVersioning.h
@@ -32,6 +32,7 @@ G_BEGIN_DECLS
 // Macros to avoid deprecation checking churn
 #ifndef GTK_API_VERSION_2
 #define GDK_DISPLAY() (GDK_DISPLAY_XDISPLAY(gdk_display_get_default()))
+#define GDK_WINDOW_XWINDOW(window) (gdk_x11_window_get_xid(window))
 #else
 GdkPixbuf* gdk_pixbuf_get_from_surface(cairo_surface_t* surface, int srcX, int srcY,
                                        int width, int height);
diff --git a/WebCore/platform/gtk/PlatformScreenGtk.cpp b/WebCore/platform/gtk/PlatformScreenGtk.cpp
index 9c70d0e..40b509e 100644
--- a/WebCore/platform/gtk/PlatformScreenGtk.cpp
+++ b/WebCore/platform/gtk/PlatformScreenGtk.cpp
@@ -121,7 +121,7 @@ FloatRect screenAvailableRect(Widget* widget)
     if (!gtk_widget_get_realized(container))
         return screenRect(widget);
 
-    GdkDrawable* rootWindow = GDK_DRAWABLE(gtk_widget_get_root_window(container));
+    GdkWindow* rootWindow = gtk_widget_get_root_window(container);
     GdkDisplay* display = gdk_window_get_display(rootWindow);
     Atom xproperty = gdk_x11_get_xatom_by_name_for_display(display, "_NET_WORKAREA");
 
diff --git a/WebCore/platform/gtk/WidgetGtk.cpp b/WebCore/platform/gtk/WidgetGtk.cpp
index db316d5..ee1005c 100644
--- a/WebCore/platform/gtk/WidgetGtk.cpp
+++ b/WebCore/platform/gtk/WidgetGtk.cpp
@@ -60,7 +60,7 @@ void Widget::setFocus(bool focused)
         gtk_widget_grab_focus(platformWidget() ? platformWidget() : GTK_WIDGET(root()->hostWindow()->platformPageClient()));
 }
 
-static GdkDrawable* gdkDrawable(PlatformWidget widget)
+static GdkWindow* gdkWindow(PlatformWidget widget)
 {
     return widget ? gtk_widget_get_window(widget) : 0;
 }
@@ -78,7 +78,7 @@ void Widget::setCursor(const Cursor& cursor)
     if (platformCursor == lastSetCursor)
         return;
 
-    gdk_window_set_cursor(gdkDrawable(platformWidget()) ? GDK_WINDOW(gdkDrawable(platformWidget())) : gtk_widget_get_window(GTK_WIDGET(root()->hostWindow()->platformPageClient())), platformCursor);
+    gdk_window_set_cursor(gdkWindow(platformWidget()) ? gdkWindow(platformWidget()) : gtk_widget_get_window(GTK_WIDGET(root()->hostWindow()->platformPageClient())), platformCursor);
     lastSetCursor = platformCursor;
 }
 
diff --git a/WebCore/platform/gtk/WidgetRenderingContextGtk2.cpp b/WebCore/platform/gtk/WidgetRenderingContextGtk2.cpp
index b8712d2..fd0b9ca 100644
--- a/WebCore/platform/gtk/WidgetRenderingContextGtk2.cpp
+++ b/WebCore/platform/gtk/WidgetRenderingContextGtk2.cpp
@@ -89,9 +89,9 @@ WidgetRenderingContext::WidgetRenderingContext(GraphicsContext* graphicsContext,
     // Fallback: We failed to create an RGBA colormap earlier, so we cannot properly paint 
     // to a temporary surface and preserve transparency. To ensure decent widget rendering, just
     // paint directly to the target drawable. This will not render CSS rotational transforms properly.
-    if (!theme->m_themePartsHaveRGBAColormap && graphicsContext->gdkDrawable()) {
+    if (!theme->m_themePartsHaveRGBAColormap && graphicsContext->gdkWindow()) {
         m_paintRect = graphicsContext->getCTM().mapRect(targetRect);
-        m_target = graphicsContext->gdkDrawable();
+        m_target = graphicsContext->gdkWindow();
         return;
     }
 
@@ -131,7 +131,7 @@ WidgetRenderingContext::~WidgetRenderingContext()
 {
     // We do not need to blit back to the target in the fallback case. See above.
     RenderThemeGtk* theme = static_cast<RenderThemeGtk*>(RenderTheme::defaultTheme().get());
-    if (!theme->m_themePartsHaveRGBAColormap && m_graphicsContext->gdkDrawable())
+    if (!theme->m_themePartsHaveRGBAColormap && m_graphicsContext->gdkWindow())
         return;
 
     // Don't paint the results back if there was an error.
-- 
1.6.1

