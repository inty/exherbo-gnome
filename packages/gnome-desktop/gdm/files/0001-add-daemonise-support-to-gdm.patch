From 6cebdeb58bc4e7391b39f5f7bb28b82b15a49b75 Mon Sep 17 00:00:00 2001
From: Saleem Abdulrasool <compnerd@compnerd.org>
Date: Tue, 19 Jan 2010 18:04:04 -0800
Subject: [PATCH] add daemonise support to gdm

By default, daemonise the GDM binary to the background, using the fork () trick.
There is now a --no-daemon option to prevent this.

Based on a patch from dan Nicholson <dbn.lists@gmail.com>
---
 daemon/main.c |   53 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 53 insertions(+), 0 deletions(-)

diff --git a/daemon/main.c b/daemon/main.c
index cfc3655..45d730d 100644
--- a/daemon/main.c
+++ b/daemon/main.c
@@ -513,6 +513,54 @@ is_debug_set (void)
         return debug;
 }
 
+static void
+dup_dev_null (int fd, int flags)
+{
+        int nullfd;
+        int dupfd;
+
+        VE_IGNORE_EINTR (nullfd = open ("/dev/null", flags));
+        if (G_UNLIKELY (nullfd < 0)) {
+                gdm_fail (_("cannot open /dev/null: %s!"), g_strerror (errno));
+                exit (EXIT_FAILURE);
+        }
+
+        VE_IGNORE_EINTR (dupfd = dup2 (nullfd, fd));
+        if (G_UNLIKELY (dupfd < 0)) {
+                gdm_fail (_("cannot duplicate fd: %s!"), g_strerror (errno));
+                exit (EXIT_FAILURE);
+        }
+
+        VE_IGNORE_EINTR (close (nullfd));
+}
+
+static void
+daemonify (void)
+{
+        pid_t pid;
+
+        pid = fork ();
+
+        /* terminate the parent */
+        if (pid > 0)
+                exit (EXIT_SUCCESS);
+
+        if (G_UNLIKELY (pid < 0)) {
+                gdm_fail (_("fork () failed: %s!"), g_strerror (errno));
+                exit (EXIT_FAILURE);
+        }
+
+        if (G_UNLIKELY (setsid () < 0)) {
+                gdm_fail (_("setsid () failed: %s!"), g_strerror (errno));
+                exit (EXIT_FAILURE);
+        }
+
+        /* reopen stdin, stdout, stderr, with /dev/null */
+        dup_dev_null (STDIN_FILENO, O_RDONLY);
+        dup_dev_null (STDOUT_FILENO, O_RDWR);
+        dup_dev_null (STDERR_FILENO, O_RDWR);
+}
+
 int
 main (int    argc,
       char **argv)
@@ -529,10 +577,12 @@ main (int    argc,
         static gboolean     do_timed_exit    = FALSE;
         static gboolean     print_version    = FALSE;
         static gboolean     fatal_warnings   = FALSE;
+        static gboolean     daemonise        = TRUE;
         static GOptionEntry entries []   = {
                 { "fatal-warnings", 0, 0, G_OPTION_ARG_NONE, &fatal_warnings, N_("Make all warnings fatal"), NULL },
                 { "timed-exit", 0, 0, G_OPTION_ARG_NONE, &do_timed_exit, N_("Exit after a time - for debugging"), NULL },
                 { "version", 0, 0, G_OPTION_ARG_NONE, &print_version, N_("Print GDM version"), NULL },
+                { "no-daemon", 0, 0, G_OPTION_ARG_NONE | G_OPTION_FLAG_REVERSE, &daemonise, N_("Do not fork into the background"), NULL },
 
                 { NULL }
         };
@@ -612,6 +662,9 @@ main (int    argc,
                 exit (-1);
         }
 
+        if (daemonise)
+           daemonify ();
+
         /* pid file */
         delete_pid ();
         write_pid ();
-- 
1.6.6

