--- configure.ac	2009-08-23 14:52:51.000000000 -0700
+++ configure.ac	2009-08-23 16:49:17.000000000 -0700
@@ -21,146 +21,261 @@
 GOBJECT_INTROSPECTION_REQUIRE(0.6.3)
 
 dnl dbus
-PKG_CHECK_MODULES(DBUS, dbus-glib-1,
-		  have_dbus=true, have_dbus=false)
-AM_CONDITIONAL(BUILD_DBUS, $have_dbus)
+AC_ARG_WITH([dbus],
+            AC_HELP_STRING([--with-dbus], [build dbus introspection]),,
+            [with_dbus=yes])
+
+if test x"$with_dbus" = x"yes" ; then
+   PKG_CHECK_MODULES(DBUS, dbus-glib-1)
+fi
+
+AM_CONDITIONAL(BUILD_DBUS, test x"$with_dbus" = x"yes")
 
 dnl atk
-PKG_CHECK_MODULES(ATK, atk >= 1.12.0,
-                  have_atk=true, have_atk=false)
-AM_CONDITIONAL(BUILD_ATK, $have_atk)
+AC_ARG_WITH([atk],
+            AC_HELP_STRING([--with-atk], [build atk introspection]),,
+            [with_atk=yes])
+
+if test x"$with_atk" = x"yes" ; then
+   PKG_CHECK_MODULES(ATK, atk >= 1.12.0)
+fi
+
+AM_CONDITIONAL(BUILD_ATK, test x"$with_atk" = x"yes")
 
 dnl pango
-PKG_CHECK_MODULES(PANGO, pango >= 1.16.0,
-                  have_pango=true, have_pango=false)
-AM_CONDITIONAL(BUILD_PANGO, $have_pango)
-
-PKG_CHECK_MODULES(PANGOXFT, pangoxft >= 1.16.0,
-		  have_pangoxft=true, have_pangoxft=false)
-AM_CONDITIONAL(BUILD_PANGOXFT, $have_pangoxft)
+AC_ARG_WITH([pango],
+            AC_HELP_STRING([--with-pango], [build pango introspection]),,
+            [with_pango=yes])
+
+if test x"$with_pango" = x"yes" ; then
+   PKG_CHECK_MODULES(PANGO, pango >= 1.16.0)
+   PKG_CHECK_MODULES(PANGOXFT, pangoxft >= 1.16.0)
+fi
+
+AM_CONDITIONAL(BUILD_PANGO, test x"$with_pango" = x"yes")
+AM_CONDITIONAL(BUILD_PANGOXFT, test x"$with_pango" = x"yes")
 
 dnl poppler
-PKG_CHECK_MODULES(POPPLER, poppler-glib >= 0.8,
-                  have_poppler=true, have_poppler=false)
-AM_CONDITIONAL(BUILD_POPPLER, $have_poppler)
+AC_ARG_WITH([poppler],
+            AC_HELP_STRING([--with-poppler], [build poppler introspection]),,
+            [with_popper=yes])
+
+if test x"$with_poppler" = x"yes" ; then
+   PKG_CHECK_MODULES(POPPLER, poppler-glib >= 0.8)
+fi
+
+AM_CONDITIONAL(BUILD_POPPLER, test x"$with_poppler" = x"yes")
 
 dnl gtk+
-PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 1.12.0,
-                  have_gtk=true, have_gtk=false)
-AM_CONDITIONAL(BUILD_GTK, $have_gtk)
+AC_ARG_WITH([gtk],
+            AC_HELP_STRING([--with-gtk], [build gtk+ introspection]),,
+            [with_gtk=yes])
+
 GDK_TARGET=
 GDK_TARGET_GIRS=
-if $have_gtk; then
-    PKG_CHECK_MODULES(GDK, gdk-2.0)
 
-    GDK_TARGET="$($PKG_CONFIG --variable=target gtk+-2.0)"
-    if test "$GDK_TARGET" = x11; then
-        GDK_TARGET_GIRS=xlib-2.0
-    fi
+if test x"$with_gtk" = x"yes" ; then
+   PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 1.12.0)
+
+   PKG_CHECK_MODULES(GDK, gdk-2.0)
+
+   GDK_TARGET="$($PKG_CONFIG --variable=target gtk+-2.0)"
+   if test "$GDK_TARGET" = x11; then
+      GDK_TARGET_GIRS=xlib-2.0
+   fi
 fi
+
 AC_SUBST(GDK_TARGET)
 AC_SUBST(GDK_TARGET_GIRS)
+AM_CONDITIONAL(BUILD_GTK, test x"$with_gtk" = x"yes")
 
 dnl gconf
-PKG_CHECK_MODULES(GCONF, gconf-2.0,
-                  have_gconf=true, have_gconf=false)
-AM_CONDITIONAL(BUILD_GCONF, $have_gconf)
+AC_ARG_WITH([gconf],
+            AC_HELP_STRING([--with-gconf], [build gconf introspection]),,
+            [with_gconf=yes])
+
+if test x"$with_gconf" = x"yes" ; then
+   PKG_CHECK_MODULES(GCONF, gconf-2.0)
+fi
+
+AM_CONDITIONAL(BUILD_GCONF, test x"$with_gconf" = x"yes")
 
 dnl soup
-PKG_CHECK_MODULES(SOUP, libsoup-2.4,
-                  have_soup=true, have_soup=false)
-AM_CONDITIONAL(BUILD_SOUP, $have_soup)
+AC_ARG_WITH([libsoup],
+            AC_HELP_STRING([--with-libsoup], [build libsoup introspection]),,
+            [with_libsoup=yes])
+
+if test x"$with_libsoup" = x"yes" ; then
+   PKG_CHECK_MODULES(SOUP, libsoup-2.4)
+fi
+
+AM_CONDITIONAL(BUILD_SOUP, test x"$with_libsoup" = x"yes")
 
 dnl babl
-PKG_CHECK_MODULES(BABL, babl,
-	 	  have_babl=true, have_babl=false)
-AM_CONDITIONAL(BUILD_BABL, $have_babl)
+AC_ARG_WITH([babl],
+            AC_HELP_STRING([--with-babl], [build babl introspection]),,
+            [with_babl=yes])
+
+if test x"$with_babl" = x"yes" ; then
+   PKG_CHECK_MODULES(BABL, babl)
+fi
+
+AM_CONDITIONAL(BUILD_BABL, test x"$with_babl" = x"yes")
 
 dnl nautilus-extension
-PKG_CHECK_MODULES(NAUTILUS, libnautilus-extension,
-		  have_nautilusextension=true, have_nautilusextension=false)
-AM_CONDITIONAL(BUILD_NAUTILUS, $have_nautilusextension)
+AC_ARG_WITH([nautilus],
+            AC_HELP_STRING([--with-nautilus], [build nautilus introspection]),,
+            [with_nautilus=yes])
+
+if test x"with_nautilus" = x"yes" ; then
+   PKG_CHECK_MODULES(NAUTILUS, libnautilus-extension)
+fi
+
+AM_CONDITIONAL(BUILD_NAUTILUS, test x"with_nautilus" = x"yes")
 
 dnl gnome-keyring
-PKG_CHECK_MODULES(GNOMEKEYRING, gnome-keyring-1,
-                  have_gnomekeyring=true, have_gnomekeyring=false)
-AM_CONDITIONAL(BUILD_GNOMEKEYRING, $have_gnomekeyring)
+AC_ARG_WITH([gnome_keyring],
+            AC_HELP_STRING([--with-gnome-keyring], [build gnome-keyring introspection]),,
+            [with_gnome_keyring=yes])
+
+if test x"with_gnome_keyring" = x"yes" ; then
+   PKG_CHECK_MODULES(GNOMEKEYRING, gnome-keyring-1)
+fi
+
+AM_CONDITIONAL(BUILD_GNOMEKEYRING, test x"$with_gnome_keyring" = x"yes")
 
 dnl webkit
-PKG_CHECK_MODULES(WEBKIT, webkit-1.0 >= 1.0,
-                  have_webkit=true, have_webkit=false)
-AM_CONDITIONAL(BUILD_WEBKIT, $have_webkit)
+AC_ARG_WITH([webkit_gtk],
+            AC_HELP_STRING([--with-webkit-gtk], [build webkit-gtk introspection]),,
+            [with_webkit_gtk=yes])
+
+if test x"$with_webkit_gtk" = x"yes" ; then
+   PKG_CHECK_MODULES(WEBKIT, webkit-1.0 >= 1.0)
+fi
+
+AM_CONDITIONAL(BUILD_WEBKIT, test x"$with_webkit_gtk" = x"yes")
 
 dnl notify
-PKG_CHECK_MODULES(NOTIFY, libnotify,
-                  have_notify=true, have_notify=false)
-AM_CONDITIONAL(BUILD_NOTIFY, $have_notify)
+AC_ARG_WITH([libnotify],
+            AC_HELP_STRING([--with-libnotify], [build libnotify introspection]),,
+            [with_libnotify=yes])
+
+if test x"$with_libnotify" = x"yes" ; then
+   PKG_CHECK_MODULES(NOTIFY, libnotify)
+fi
+
+AM_CONDITIONAL(BUILD_NOTIFY, test x"$with_libnotify" = x"yes")
 
 dnl gnio
-PKG_CHECK_MODULES(GNIO, gnio,
-                  have_gnio=true, have_gnio=false)
-AM_CONDITIONAL(BUILD_GNIO, $have_gnio)
+AC_ARG_WITH([gnio],
+            AC_HELP_STRING([--with-gnio], [build gnio introspection]),,
+            [with_gnio=yes])
+
+if test x"$with_gnio" = x"yes" ; then
+   PKG_CHECK_MODULES(GNIO, gnio)
+fi
+
+AM_CONDITIONAL(BUILD_GNIO, test x"with_gnio" = x"yes")
 
 dnl clutter
-PKG_CHECK_MODULES(CLUTTER, clutter-0.8 >= 0.8,
-                  have_clutter=true, have_clutter=false)
-AM_CONDITIONAL(BUILD_CLUTTER, $have_clutter)
+AC_ARG_WITH([clutter],
+            AC_HELP_STRING([--with-clutter], [build clutter introspection]),,
+            [with_clutter=yes])
+
 CLUTTER_BACKEND=
 CLUTTER_BACKEND_GIRS=
-if $have_clutter; then
-    CLUTTER_BACKEND="$($PKG_CONFIG --variable=backend clutter-0.8)"
-    if test "$CLUTTER_BACKEND" = glx; then
-        CLUTTER_BACKEND_GIRS=xlib-2.0
-    fi
-    # check if depending on clutter also brings usable gdk-pixbuf, clutter
-    # doesn't necessarily use (win32,osx) or export (Requires.private) it
-    save_CFLAGS="$CFLAGS"; CFLAGS="$CLUTTER_CFLAGS"
-    save_LDFLAGS="$LDFLAGS"; LDFLAGS="$CLUTTER_LIBS"
-    AC_TRY_LINK([#include <gdk-pixbuf/gdk-pixbuf.h>],
-                [GType gtype = GDK_TYPE_PIXBUF;],
-                AC_DEFINE(HAVE_CLUTTER_GDKPIXBUF, 1,
-                          [Clutter is exporting gdk-pixbuf]))
-    CFLAGS="$save_CFLAGS"
-    LDFLAGS="$save_LDFLAGS"
+if test x"$with_clutter" = x"yes" ; then
+   PKG_CHECK_MODULES(CLUTTER, clutter-0.8 >= 0.8)
+
+   CLUTTER_BACKEND="$($PKG_CONFIG --variable=backend clutter-0.8)"
+   if test "$CLUTTER_BACKEND" = glx; then
+      CLUTTER_BACKEND_GIRS=xlib-2.0
+   fi
+
+   # check if depending on clutter also brings usable gdk-pixbuf, clutter
+   # doesn't necessarily use (win32,osx) or export (Requires.private) it
+   save_CFLAGS="$CFLAGS"; CFLAGS="$CLUTTER_CFLAGS"
+   save_LDFLAGS="$LDFLAGS"; LDFLAGS="$CLUTTER_LIBS"
+   AC_TRY_LINK([#include <gdk-pixbuf/gdk-pixbuf.h>],
+               [GType gtype = GDK_TYPE_PIXBUF;],
+               AC_DEFINE(HAVE_CLUTTER_GDKPIXBUF, 1,
+                         [Clutter is exporting gdk-pixbuf]))
+   CFLAGS="$save_CFLAGS"
+   LDFLAGS="$save_LDFLAGS"
 fi
+
+AM_CONDITIONAL(BUILD_CLUTTER, test x"$with_clutter" = x"yes")
+
 AC_SUBST(CLUTTER_BACKEND)
 AC_SUBST(CLUTTER_BACKEND_GIRS)
 
 dnl clutter-gtk
-PKG_CHECK_MODULES(CLUTTERGTK, clutter-gtk-0.8 >= 0.8,
-                  have_clutter_gtk=true, have_clutter_gtk=false)
-AM_CONDITIONAL(BUILD_CLUTTERGTK, $have_clutter_gtk)
+AC_ARG_WITH([clutter_gtk],
+            AC_HELP_STRING([--with-clutter-gtk], [build clutter-gtk introspection]),,
+            [with_clutter_gtk=yes])
+
+if test x"$with_clutter_gtk" = x"yes" ; then
+   PKG_CHECK_MODULES(CLUTTERGTK, clutter-gtk-0.8 >= 0.8)
+fi
+
+AM_CONDITIONAL(BUILD_CLUTTERGTK, test x"$with_clutter_gtk" = x"yes")
 
 dnl clutter-cairo
-PKG_CHECK_MODULES(CLUTTERCAIRO, clutter-cairo-0.8 >= 0.8,
-                  have_clutter_cairo=true, have_clutter_cairo=false)
-AM_CONDITIONAL(BUILD_CLUTTERCAIRO, $have_clutter_cairo)
+AC_ARG_WITH([clutter_cairo],
+            AC_HELP_STRING([--with-clutter-cairo], [build clutter-cairo introspection]),,
+            [with_clutter_cairo=yes])
 
-dnl gstreamer
-PKG_CHECK_MODULES(GSTREAMER, gstreamer-0.10 >= 0.10.0, 
-                  have_gstreamer=true, have_gstreamer=false)
-AM_CONDITIONAL(BUILD_GSTREAMER, $have_gstreamer)
+if test x"$with_clutter_cairo" = x"yes" ; then
+   PKG_CHECK_MODULES(CLUTTERCAIRO, clutter-cairo-0.8 >= 0.8)
+fi
+
+AM_CONDITIONAL(BUILD_CLUTTERCAIRO, test x"$with_clutter_cairo" = x"yes")
 
 dnl gstreamer
-PKG_CHECK_MODULES(GSTREAMER_PLUGINS_BASE, gstreamer-plugins-base-0.10 >= 0.10.0, 
-                  have_gstreamer_plugins_base=true, 
-                  have_gstreamer_plugins_base=false)
-AM_CONDITIONAL(BUILD_GSTREAMER_PLUGINS_BASE, $have_gstreamer_plugins_base)
+AC_ARG_WITH([gstreamer],
+            AC_HELP_STRING([--with-gstreamer], [build gstreamer introspection]),,
+            [with_gstreamer=yes])
+
+if test x"$with_gstreamer" = x"yes" ; then
+   PKG_CHECK_MODULES(GSTREAMER, gstreamer-0.10 >= 0.10.0)
+   PKG_CHECK_MODULES(GSTREAMER_PLUGINS_BASE, gstreamer-plugins-base-0.10 >= 0.10.0)
+fi
+
+AM_CONDITIONAL(BUILD_GSTREAMER, test x"$with_gstreamer" = x"yes")
+AM_CONDITIONAL(BUILD_GSTREAMER_PLUGINS_BASE, test x"$with_gstreamer" = x"yes")
 
 dnl gtksourceview
-PKG_CHECK_MODULES(GTKSOURCEVIEW, gtksourceview-2.0,
-                  have_gtksourceview=true, have_gtksourceview=false)
-AM_CONDITIONAL(BUILD_GTKSOURCEVIEW, $have_gtksourceview)
+AC_ARG_WITH([gtksourceview],
+            AC_HELP_STRING([--with-gtksourceview], [build gtksourceview introspection]),,
+            [with_gtksourceview])
+
+if test x"$with_gtksourceview" = x"yes" ; then
+   PKG_CHECK_MODULES(GTKSOURCEVIEW, gtksourceview-2.0)
+fi
+
+AM_CONDITIONAL(BUILD_GTKSOURCEVIEW, test x"$with_gstreamer" = x"yes")
 
 dnl vte
-PKG_CHECK_MODULES(VTE, vte,
-                  have_vte=true, have_vte=false)
-AM_CONDITIONAL(BUILD_VTE, $have_vte)
+AC_ARG_WITH([vte],
+            AC_HELP_STRING([--with-vte], [build vte introspection]),,
+            [with_vte=yes])
+
+if test x"$with_vte" = x"yes" ; then
+   PKG_CHECK_MODULES(VTE, vte)
+fi
+
+AM_CONDITIONAL(BUILD_VTE, test x"$with_vte" = x"yes")
 
 dnl goocanvas
-PKG_CHECK_MODULES(GOOCANVAS, goocanvas,
-                  have_goocanvas=true, have_goocanvas=false)
-AM_CONDITIONAL(BUILD_GOOCANVAS, $have_goocanvas)
+AC_ARG_WITH([goocanvas],
+            AC_HELP_STRING([--with-goocanvas], [build goocanvas introspection]),,
+            [with_goocanvas=yes])
+
+if test x"$with_goocanvas" = x"yes" ; then
+   PKG_CHECK_MODULES(GOOCANVAS, goocanvas)
+fi
+
+AM_CONDITIONAL(BUILD_GOOCANVAS, test x"$With_goocanvas" = x"yes")
 
 dnl mission-control (disabled for now, it has odd structs and isn't useful yet)
 dnl PKG_CHECK_MODULES(MISSIONCONTROL, libmissioncontrol,
@@ -169,38 +284,61 @@
 AM_CONDITIONAL(BUILD_MISSIONCONTROL, $have_missioncontrol)
 
 dnl gssdp
-PKG_CHECK_MODULES(GSSDP, gssdp-1.0,
-                  have_gssdp=true, have_gssdp=false)
-AM_CONDITIONAL(BUILD_GSSDP, $have_gssdp)
-
-dnl gupnp
-if test $have_gssdp; then
-    PKG_CHECK_MODULES(GUPNP, gupnp-1.0,
-                      have_gupnp=true, have_gupnp=false)
-else
-    have_gupnp=false
+AC_ARG_WITH([gupnp],
+            AC_HELP_STRING([--with-gupnp], [build gupnp introspection]),,
+            [with_gupnp=yes])
+
+if test x"$with_gupnp" = x"yes" ; then
+   PKG_CHECK_MODULES(GSSDP, gssdp-1.0)
+   PKG_CHECK_MODULES(GUPNP, gupnp-1.0)
 fi
-AM_CONDITIONAL(BUILD_GUPNP, $have_gupnp)
+
+AM_CONDITIONAL(BUILD_GSSDP, test x"$with_gupnp" = x"yes")
+AM_CONDITIONAL(BUILD_GUPNP, test x"$with_gupnp" = x"yes")
 
 dnl avahi-gobject
-PKG_CHECK_MODULES(AVAHI, avahi-core >= 0.6 avahi-gobject >= 0.6,
-                  have_avahi=true, have_avahi=false)
-AM_CONDITIONAL(BUILD_AVAHI, $have_avahi)
+AC_ARG_WITH([avahi],
+            AC_HELP_STRING([--with-avahi], [build avahi introspection]),,
+            [with_avahi=yes])
+
+if test x"$with_avahi" = x"yes" ; then
+   PKG_CHECK_MODULES(AVAHI, avahi-core >= 0.6 avahi-gobject >= 0.6)
+fi
+
+AM_CONDITIONAL(BUILD_AVAHI, test x"$with_avahi" = x"yes")
 
 dnl unique
-PKG_CHECK_MODULES(UNIQUE, unique-1.0 >= 1.0.0,
-                  have_unique=true, have_unique=false)
-AM_CONDITIONAL(BUILD_UNIQUE, $have_unique)
+AC_ARG_WITH([unique],
+            AC_HELP_STRING([--with-unique], [build libunique introspection]),,
+            [with_unique=yes])
+
+if test x"$with_unique" = x"yes" ; then
+   PKG_CHECK_MODULES(UNIQUE, unique-1.0 >= 1.0.0)
+fi
+
+AM_CONDITIONAL(BUILD_UNIQUE, test x"$with_unique" = x"yes")
 
 dnl gmenu
-PKG_CHECK_MODULES(GMENU, libgnome-menu,
-		  have_gmenu=true, have_gmenu=false)
-AM_CONDITIONAL(BUILD_GMENU, $have_gmenu)
+AC_ARG_WITH([gnome_menus],
+            AC_HELP_STRING([--with-gnome-menus], [build gnome-menus introspection]),,
+            [with_gnome_menus=yes])
+
+if test x"$with_gnome_menus" = x"yes" ; then
+   PKG_CHECK_MODULES(GMENU, libgnome-menu)
+fi
+
+AM_CONDITIONAL(BUILD_GMENU, test x"$with_gnome_menus" = x"yes")
 
 dnl wnck
-PKG_CHECK_MODULES(WNCK, libwnck-1.0,
-		  have_wnck=true, have_wnck=false)
-AM_CONDITIONAL(BUILD_WNCK, $have_wnck)
+AC_ARG_WITH([wnck],
+            AC_HELP_STRING([--with-wnck], [build wnck introspection]),,
+            [with_wnck=yes])
+
+if test x"$with_wnck" = x"yes" ; then
+   PKG_CHECK_MODULES(WNCK, libwnck-1.0)
+fi
+
+AM_CONDITIONAL(BUILD_WNCK, test x"$with_wnck" = x"yes")
 
 AC_CONFIG_FILES([Makefile
                  gir/Makefile])
