# Copyright 2008 Saleem Abdulrasool <compnerd@compnerd.org>
# Distributed under the terms of the GNU General Purpose License v2
# Based in part on 'gnome2-utils.eclass' from Gentoo which is
#    Copyright 1999-2006 Gentoo Foundation

: ${GCONFTOOL:=${ROOT}usr/bin/gconftool-2}
: ${GTK_UPDATE_ICON_CACHE:=$(type -p gtk-update-icon-cache 2>/dev/null)}

require gnome.org
export_exlib_phases pkg_preinst src_install pkg_postinst

gnome_exlib_save_gconf_schemas()
{
    pushd "${D}" &> /dev/null
    export GNOME_EXLIB_GCONF_SCHEMAS=$(find 'etc/gconf/schemas' -name '*.schemas' 2>/dev/null)
    popd &> /dev/null
}

gnome_exlib_save_icon_index_dirs()
{
    pushd "${D}" &> /dev/null
    export GNOME_EXLIB_ICON_INDEX_DIRS=$(find 'usr/share/icons' -maxdepth 1 -mindepth 1 -type d 2>/dev/null)
    popd &> /dev/null
}

gnome_exlib_restart_gconfd()
{
    local pids=$(pgrep -x gconfd-2)

    if [[ -n "${pids}" ]] ; then
        ebegin "Reloading GConf schemas"
        kill -HUP ${pids}
        eend $?
    fi
}

gnome_exlib_install_gconf_schemas()
{
    if [[ ! -x "${GCONFTOOL}" ]] ; then
        return
    fi

    if [[ -z "${GNOME_EXLIB_GCONF_SCHEMAS}" ]] ; then
        einfo "No GConf schemas found"
        return
    fi

    unset GCONF_DISABLE_MAKEFILE_SCHEMA_INSTALL
    export GCONF_CONFIG_SOURCE=$("${GCONFTOOL}" --get-default-source)

    einfo "Installing GConf schemas"

    for schema in ${GNOME_EXLIB_GCONF_SCHEMAS} ; do
        if [[ -e "${ROOT}${schema}" ]] ; then
            "${GCONFTOOL}" --makefile-install-rule "${ROOT}${schema}" 1>/dev/null
        fi
    done

    gnome_exlib_restart_gconfd
}

gnome_exlib_uninstall_gconf_schemas()
{
    if [[ ! -x "${GCONFTOOL}" ]] ; then
        return
    fi

    if [[ -z "${GNOME_EXLIB_GCONF_SCHEMAS}" ]] ; then
        einfo "No GConf schemas found"
        return
    fi

    unset GCONF_DISABLE_MAKEFILE_SCHEMA_INSTALL
    export GCONF_CONFIG_SOURCE=$("${GCONFTOOL}" --get-default-source)

    einfo "Uninstalling GConf schemas"

    for schema in ${GCONF_EXLIB_GCONF_SCHEMAS} ; do
        if [[ -e "${ROOT}${schema}" ]] ; then
            "${GCONFTOOL}" --makefile-uninstall-rule "${ROOT}${schema}" 1>/dev/null
        fi
    done

    gnome_exlib_restart_gconfd
}

gnome_exlib_update_icon_cache()
{
    local failures=( )
    local retval=0

    if [[ ! -x "${GTK_UPDATE_ICON_CACHE}" ]] ; then
        return
    fi

    if [[ -z "${GNOME_EXLIB_ICONS}" ]] ; then
        return
    fi

    ebegin "Updating icons cache"

    for dir in ${GNOME_EXLIB_ICON_INDEX_DIRS} ; do
        if [[ -f "${ROOT}${dir}/index.theme" ]] ; then
            "${GTK_UPDATE_ICON_CACHE}" -qf "${ROOT}${dir}" || {
                failures[$(( ${#failures[@]} + 1 ))]="${ROOT}${dir}"
                retval=1
            }
        fi
    done

    eend ${retval}

    for failure in ${failures} ; do
        eerror "Failed to update icon cache: ${failure}"
    done
}

gnome-2_pkg_preinst()
{
    gnome_exlib_save_gconf_schemas
    gnome_exlib_save_icon_index_dirs
    default
}

gnome-2_src_install()
{
    export GCONF_DISABLE_MAKEFILE_SCHEMA_INSTALL=1
    default
    unset GCONF_DISABLE_MAKEFILE_SCHEMA_INSTALL
}

gnome-2_pkg_postinst()
{
    gnome_exlib_install_gconf_schemas
    gnome_exlib_update_icon_cache
    default
}
